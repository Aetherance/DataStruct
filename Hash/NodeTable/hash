#include<iostream>
#include<vector>
#include<list>
using namespace std;

class HashTable {
public:
    HashTable(int);
    int hash(int);
    void insert(int);
    void remove(int);
    int find(int);
    bool empty();
    size_t size();

private:
    vector<list<int>>data;
};

HashTable::HashTable(int len) {
    vector<list<int>>initializer(len,list(1,0));
    data = initializer;
}

int HashTable::hash(int value) {
    return value % (data.size()-1);
}

void HashTable::insert(int value) {
    data[hash(value)].push_back(value);
}

void HashTable::remove(int value) {
    list<int>& cur = data[hash(value)];
    cur.remove(value);
}

int HashTable::find(int value) {
    return hash(value);
}

bool HashTable::empty() {
    return data.size() ? false : true;
}

size_t HashTable::size() {
    return data.size();
}